{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2e76105dd60ffec6da09.hot-update.js","sources":["webpack:///./node_modules/store-js/dist/store.legacy.js","webpack:///./node_modules/store-js/plugins/json2.js","webpack:///./node_modules/store-js/plugins/lib/json2.js","webpack:///./node_modules/store-js/src/store-engine.js","webpack:///./node_modules/store-js/src/util.js","webpack:///./node_modules/store-js/storages/all.js","webpack:///./node_modules/store-js/storages/cookieStorage.js","webpack:///./node_modules/store-js/storages/localStorage.js","webpack:///./node_modules/store-js/storages/memoryStorage.js","webpack:///./node_modules/store-js/storages/oldFF-globalStorage.js","webpack:///./node_modules/store-js/storages/oldIE-userDataStorage.js","webpack:///./node_modules/store-js/storages/sessionStorage.js","webpack:///./pages/index.js"],"sourcesContent":["var engine = require('../src/store-engine')\r\n\r\nvar storages = require('../storages/all')\r\nvar plugins = [require('../plugins/json2')]\r\n\r\nmodule.exports = engine.createStore(storages, plugins)\r\n","module.exports = json2Plugin\r\n\r\nfunction json2Plugin() {\r\n\trequire('./lib/json2')\r\n\treturn {}\r\n}\r\n","//  json2.js\r\n//  2016-10-28\r\n//  Public Domain.\r\n//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\r\n//  See http://www.JSON.org/js.html\r\n//  This code should be minified before deployment.\r\n//  See http://javascript.crockford.com/jsmin.html\r\n\r\n//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\r\n//  NOT CONTROL.\r\n\r\n//  This file creates a global JSON object containing two methods: stringify\r\n//  and parse. This file provides the ES5 JSON capability to ES3 systems.\r\n//  If a project might run on IE8 or earlier, then this file should be included.\r\n//  This file does nothing on ES5 systems.\r\n\r\n//      JSON.stringify(value, replacer, space)\r\n//          value       any JavaScript value, usually an object or array.\r\n//          replacer    an optional parameter that determines how object\r\n//                      values are stringified for objects. It can be a\r\n//                      function or an array of strings.\r\n//          space       an optional parameter that specifies the indentation\r\n//                      of nested structures. If it is omitted, the text will\r\n//                      be packed without extra whitespace. If it is a number,\r\n//                      it will specify the number of spaces to indent at each\r\n//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\r\n//                      it contains the characters used to indent at each level.\r\n//          This method produces a JSON text from a JavaScript value.\r\n//          When an object value is found, if the object contains a toJSON\r\n//          method, its toJSON method will be called and the result will be\r\n//          stringified. A toJSON method does not serialize: it returns the\r\n//          value represented by the name/value pair that should be serialized,\r\n//          or undefined if nothing should be serialized. The toJSON method\r\n//          will be passed the key associated with the value, and this will be\r\n//          bound to the value.\r\n\r\n//          For example, this would serialize Dates as ISO strings.\r\n\r\n//              Date.prototype.toJSON = function (key) {\r\n//                  function f(n) {\r\n//                      // Format integers to have at least two digits.\r\n//                      return (n < 10)\r\n//                          ? \"0\" + n\r\n//                          : n;\r\n//                  }\r\n//                  return this.getUTCFullYear()   + \"-\" +\r\n//                       f(this.getUTCMonth() + 1) + \"-\" +\r\n//                       f(this.getUTCDate())      + \"T\" +\r\n//                       f(this.getUTCHours())     + \":\" +\r\n//                       f(this.getUTCMinutes())   + \":\" +\r\n//                       f(this.getUTCSeconds())   + \"Z\";\r\n//              };\r\n\r\n//          You can provide an optional replacer method. It will be passed the\r\n//          key and value of each member, with this bound to the containing\r\n//          object. The value that is returned from your method will be\r\n//          serialized. If your method returns undefined, then the member will\r\n//          be excluded from the serialization.\r\n\r\n//          If the replacer parameter is an array of strings, then it will be\r\n//          used to select the members to be serialized. It filters the results\r\n//          such that only members with keys listed in the replacer array are\r\n//          stringified.\r\n\r\n//          Values that do not have JSON representations, such as undefined or\r\n//          functions, will not be serialized. Such values in objects will be\r\n//          dropped; in arrays they will be replaced with null. You can use\r\n//          a replacer function to replace those with JSON values.\r\n\r\n//          JSON.stringify(undefined) returns undefined.\r\n\r\n//          The optional space parameter produces a stringification of the\r\n//          value that is filled with line breaks and indentation to make it\r\n//          easier to read.\r\n\r\n//          If the space parameter is a non-empty string, then that string will\r\n//          be used for indentation. If the space parameter is a number, then\r\n//          the indentation will be that many spaces.\r\n\r\n//          Example:\r\n\r\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\r\n//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\r\n\r\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\r\n//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\r\n\r\n//          text = JSON.stringify([new Date()], function (key, value) {\r\n//              return this[key] instanceof Date\r\n//                  ? \"Date(\" + this[key] + \")\"\r\n//                  : value;\r\n//          });\r\n//          // text is '[\"Date(---current time---)\"]'\r\n\r\n//      JSON.parse(text, reviver)\r\n//          This method parses a JSON text to produce an object or array.\r\n//          It can throw a SyntaxError exception.\r\n\r\n//          The optional reviver parameter is a function that can filter and\r\n//          transform the results. It receives each of the keys and values,\r\n//          and its return value is used instead of the original value.\r\n//          If it returns what it received, then the structure is not modified.\r\n//          If it returns undefined then the member is deleted.\r\n\r\n//          Example:\r\n\r\n//          // Parse the text. Values that look like ISO date strings will\r\n//          // be converted to Date objects.\r\n\r\n//          myData = JSON.parse(text, function (key, value) {\r\n//              var a;\r\n//              if (typeof value === \"string\") {\r\n//                  a =\r\n//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\r\n//                  if (a) {\r\n//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\r\n//                          +a[5], +a[6]));\r\n//                  }\r\n//              }\r\n//              return value;\r\n//          });\r\n\r\n//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\r\n//              var d;\r\n//              if (typeof value === \"string\" &&\r\n//                      value.slice(0, 5) === \"Date(\" &&\r\n//                      value.slice(-1) === \")\") {\r\n//                  d = new Date(value.slice(5, -1));\r\n//                  if (d) {\r\n//                      return d;\r\n//                  }\r\n//              }\r\n//              return value;\r\n//          });\r\n\r\n//  This is a reference implementation. You are free to copy, modify, or\r\n//  redistribute.\r\n\r\n/*jslint\r\n    eval, for, this\r\n*/\r\n\r\n/*property\r\n    JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\r\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\r\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\r\n    test, toJSON, toString, valueOf\r\n*/\r\n\r\n\r\n// Create a JSON object only if one does not already exist. We create the\r\n// methods in a closure to avoid creating global variables.\r\n\r\nif (typeof JSON !== \"object\") {\r\n    JSON = {};\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var rx_one = /^[\\],:{}\\s]*$/;\r\n    var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\r\n    var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\n    var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\r\n    var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\r\n    var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\r\n\r\n    function f(n) {\r\n        // Format integers to have at least two digits.\r\n        return n < 10\r\n            ? \"0\" + n\r\n            : n;\r\n    }\r\n\r\n    function this_value() {\r\n        return this.valueOf();\r\n    }\r\n\r\n    if (typeof Date.prototype.toJSON !== \"function\") {\r\n\r\n        Date.prototype.toJSON = function () {\r\n\r\n            return isFinite(this.valueOf())\r\n                ? this.getUTCFullYear() + \"-\" +\r\n                        f(this.getUTCMonth() + 1) + \"-\" +\r\n                        f(this.getUTCDate()) + \"T\" +\r\n                        f(this.getUTCHours()) + \":\" +\r\n                        f(this.getUTCMinutes()) + \":\" +\r\n                        f(this.getUTCSeconds()) + \"Z\"\r\n                : null;\r\n        };\r\n\r\n        Boolean.prototype.toJSON = this_value;\r\n        Number.prototype.toJSON = this_value;\r\n        String.prototype.toJSON = this_value;\r\n    }\r\n\r\n    var gap;\r\n    var indent;\r\n    var meta;\r\n    var rep;\r\n\r\n\r\n    function quote(string) {\r\n\r\n// If the string contains no control characters, no quote characters, and no\r\n// backslash characters, then we can safely slap some quotes around it.\r\n// Otherwise we must also replace the offending characters with safe escape\r\n// sequences.\r\n\r\n        rx_escapable.lastIndex = 0;\r\n        return rx_escapable.test(string)\r\n            ? \"\\\"\" + string.replace(rx_escapable, function (a) {\r\n                var c = meta[a];\r\n                return typeof c === \"string\"\r\n                    ? c\r\n                    : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\r\n            }) + \"\\\"\"\r\n            : \"\\\"\" + string + \"\\\"\";\r\n    }\r\n\r\n\r\n    function str(key, holder) {\r\n\r\n// Produce a string from holder[key].\r\n\r\n        var i;          // The loop counter.\r\n        var k;          // The member key.\r\n        var v;          // The member value.\r\n        var length;\r\n        var mind = gap;\r\n        var partial;\r\n        var value = holder[key];\r\n\r\n// If the value has a toJSON method, call it to obtain a replacement value.\r\n\r\n        if (value && typeof value === \"object\" &&\r\n                typeof value.toJSON === \"function\") {\r\n            value = value.toJSON(key);\r\n        }\r\n\r\n// If we were called with a replacer function, then call the replacer to\r\n// obtain a replacement value.\r\n\r\n        if (typeof rep === \"function\") {\r\n            value = rep.call(holder, key, value);\r\n        }\r\n\r\n// What happens next depends on the value's type.\r\n\r\n        switch (typeof value) {\r\n        case \"string\":\r\n            return quote(value);\r\n\r\n        case \"number\":\r\n\r\n// JSON numbers must be finite. Encode non-finite numbers as null.\r\n\r\n            return isFinite(value)\r\n                ? String(value)\r\n                : \"null\";\r\n\r\n        case \"boolean\":\r\n        case \"null\":\r\n\r\n// If the value is a boolean or null, convert it to a string. Note:\r\n// typeof null does not produce \"null\". The case is included here in\r\n// the remote chance that this gets fixed someday.\r\n\r\n            return String(value);\r\n\r\n// If the type is \"object\", we might be dealing with an object or an array or\r\n// null.\r\n\r\n        case \"object\":\r\n\r\n// Due to a specification blunder in ECMAScript, typeof null is \"object\",\r\n// so watch out for that case.\r\n\r\n            if (!value) {\r\n                return \"null\";\r\n            }\r\n\r\n// Make an array to hold the partial results of stringifying this object value.\r\n\r\n            gap += indent;\r\n            partial = [];\r\n\r\n// Is the value an array?\r\n\r\n            if (Object.prototype.toString.apply(value) === \"[object Array]\") {\r\n\r\n// The value is an array. Stringify every element. Use null as a placeholder\r\n// for non-JSON values.\r\n\r\n                length = value.length;\r\n                for (i = 0; i < length; i += 1) {\r\n                    partial[i] = str(i, value) || \"null\";\r\n                }\r\n\r\n// Join all of the elements together, separated with commas, and wrap them in\r\n// brackets.\r\n\r\n                v = partial.length === 0\r\n                    ? \"[]\"\r\n                    : gap\r\n                        ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\r\n                        : \"[\" + partial.join(\",\") + \"]\";\r\n                gap = mind;\r\n                return v;\r\n            }\r\n\r\n// If the replacer is an array, use it to select the members to be stringified.\r\n\r\n            if (rep && typeof rep === \"object\") {\r\n                length = rep.length;\r\n                for (i = 0; i < length; i += 1) {\r\n                    if (typeof rep[i] === \"string\") {\r\n                        k = rep[i];\r\n                        v = str(k, value);\r\n                        if (v) {\r\n                            partial.push(quote(k) + (\r\n                                gap\r\n                                    ? \": \"\r\n                                    : \":\"\r\n                            ) + v);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n\r\n// Otherwise, iterate through all of the keys in the object.\r\n\r\n                for (k in value) {\r\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                        v = str(k, value);\r\n                        if (v) {\r\n                            partial.push(quote(k) + (\r\n                                gap\r\n                                    ? \": \"\r\n                                    : \":\"\r\n                            ) + v);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n// Join all of the member texts together, separated with commas,\r\n// and wrap them in braces.\r\n\r\n            v = partial.length === 0\r\n                ? \"{}\"\r\n                : gap\r\n                    ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\r\n                    : \"{\" + partial.join(\",\") + \"}\";\r\n            gap = mind;\r\n            return v;\r\n        }\r\n    }\r\n\r\n// If the JSON object does not yet have a stringify method, give it one.\r\n\r\n    if (typeof JSON.stringify !== \"function\") {\r\n        meta = {    // table of character substitutions\r\n            \"\\b\": \"\\\\b\",\r\n            \"\\t\": \"\\\\t\",\r\n            \"\\n\": \"\\\\n\",\r\n            \"\\f\": \"\\\\f\",\r\n            \"\\r\": \"\\\\r\",\r\n            \"\\\"\": \"\\\\\\\"\",\r\n            \"\\\\\": \"\\\\\\\\\"\r\n        };\r\n        JSON.stringify = function (value, replacer, space) {\r\n\r\n// The stringify method takes a value and an optional replacer, and an optional\r\n// space parameter, and returns a JSON text. The replacer can be a function\r\n// that can replace values, or an array of strings that will select the keys.\r\n// A default replacer method can be provided. Use of the space parameter can\r\n// produce text that is more easily readable.\r\n\r\n            var i;\r\n            gap = \"\";\r\n            indent = \"\";\r\n\r\n// If the space parameter is a number, make an indent string containing that\r\n// many spaces.\r\n\r\n            if (typeof space === \"number\") {\r\n                for (i = 0; i < space; i += 1) {\r\n                    indent += \" \";\r\n                }\r\n\r\n// If the space parameter is a string, it will be used as the indent string.\r\n\r\n            } else if (typeof space === \"string\") {\r\n                indent = space;\r\n            }\r\n\r\n// If there is a replacer, it must be a function or an array.\r\n// Otherwise, throw an error.\r\n\r\n            rep = replacer;\r\n            if (replacer && typeof replacer !== \"function\" &&\r\n                    (typeof replacer !== \"object\" ||\r\n                    typeof replacer.length !== \"number\")) {\r\n                throw new Error(\"JSON.stringify\");\r\n            }\r\n\r\n// Make a fake root object containing our value under the key of \"\".\r\n// Return the result of stringifying the value.\r\n\r\n            return str(\"\", {\"\": value});\r\n        };\r\n    }\r\n\r\n\r\n// If the JSON object does not yet have a parse method, give it one.\r\n\r\n    if (typeof JSON.parse !== \"function\") {\r\n        JSON.parse = function (text, reviver) {\r\n\r\n// The parse method takes a text and an optional reviver function, and returns\r\n// a JavaScript value if the text is a valid JSON text.\r\n\r\n            var j;\r\n\r\n            function walk(holder, key) {\r\n\r\n// The walk method is used to recursively walk the resulting structure so\r\n// that modifications can be made.\r\n\r\n                var k;\r\n                var v;\r\n                var value = holder[key];\r\n                if (value && typeof value === \"object\") {\r\n                    for (k in value) {\r\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                            v = walk(value, k);\r\n                            if (v !== undefined) {\r\n                                value[k] = v;\r\n                            } else {\r\n                                delete value[k];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return reviver.call(holder, key, value);\r\n            }\r\n\r\n\r\n// Parsing happens in four stages. In the first stage, we replace certain\r\n// Unicode characters with escape sequences. JavaScript handles many characters\r\n// incorrectly, either silently deleting them, or treating them as line endings.\r\n\r\n            text = String(text);\r\n            rx_dangerous.lastIndex = 0;\r\n            if (rx_dangerous.test(text)) {\r\n                text = text.replace(rx_dangerous, function (a) {\r\n                    return \"\\\\u\" +\r\n                            (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\r\n                });\r\n            }\r\n\r\n// In the second stage, we run the text against regular expressions that look\r\n// for non-JSON patterns. We are especially concerned with \"()\" and \"new\"\r\n// because they can cause invocation, and \"=\" because it can cause mutation.\r\n// But just to be safe, we want to reject all unexpected forms.\r\n\r\n// We split the second stage into 4 regexp operations in order to work around\r\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\r\n// replace the JSON backslash pairs with \"@\" (a non-JSON character). Second, we\r\n// replace all simple value tokens with \"]\" characters. Third, we delete all\r\n// open brackets that follow a colon or comma or that begin the text. Finally,\r\n// we look to see that the remaining characters are only whitespace or \"]\" or\r\n// \",\" or \":\" or \"{\" or \"}\". If that is so, then the text is safe for eval.\r\n\r\n            if (\r\n                rx_one.test(\r\n                    text\r\n                        .replace(rx_two, \"@\")\r\n                        .replace(rx_three, \"]\")\r\n                        .replace(rx_four, \"\")\r\n                )\r\n            ) {\r\n\r\n// In the third stage we use the eval function to compile the text into a\r\n// JavaScript structure. The \"{\" operator is subject to a syntactic ambiguity\r\n// in JavaScript: it can begin a block or an object literal. We wrap the text\r\n// in parens to eliminate the ambiguity.\r\n\r\n                j = eval(\"(\" + text + \")\");\r\n\r\n// In the optional fourth stage, we recursively walk the new structure, passing\r\n// each name/value pair to a reviver function for possible transformation.\r\n\r\n                return (typeof reviver === \"function\")\r\n                    ? walk({\"\": j}, \"\")\r\n                    : j;\r\n            }\r\n\r\n// If the text is not JSON parseable, then a SyntaxError is thrown.\r\n\r\n            throw new SyntaxError(\"JSON.parse\");\r\n        };\r\n    }\r\n}());","var util = require('./util')\r\nvar slice = util.slice\r\nvar pluck = util.pluck\r\nvar each = util.each\r\nvar create = util.create\r\nvar isList = util.isList\r\nvar isFunction = util.isFunction\r\nvar isObject = util.isObject\r\n\r\nmodule.exports = {\r\n\tcreateStore: createStore,\r\n}\r\n\r\nvar storeAPI = {\r\n\tversion: '2.0.3',\r\n\tenabled: false,\r\n\t\r\n\t// addStorage adds another storage to this store. The store\r\n\t// will use the first storage it receives that is enabled, so\r\n\t// call addStorage in the order of preferred storage.\r\n\taddStorage: function(storage) {\r\n\t\tif (this.enabled) { return }\r\n\t\tif (this._testStorage(storage)) {\r\n\t\t\tthis._storage.resolved = storage\r\n\t\t\tthis.enabled = true\r\n\t\t}\r\n\t},\r\n\r\n\t// addPlugin will add a plugin to this store.\r\n\taddPlugin: function(plugin) {\r\n\t\tvar self = this\r\n\r\n\t\t// If the plugin is an array, then add all plugins in the array.\r\n\t\t// This allows for a plugin to depend on other plugins.\r\n\t\tif (isList(plugin)) {\r\n\t\t\teach(plugin, function(plugin) {\r\n\t\t\t\tself.addPlugin(plugin)\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Keep track of all plugins we've seen so far, so that we\r\n\t\t// don't add any of them twice.\r\n\t\tvar seenPlugin = pluck(this._seenPlugins, function(seenPlugin) { return (plugin === seenPlugin) })\r\n\t\tif (seenPlugin) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis._seenPlugins.push(plugin)\r\n\r\n\t\t// Check that the plugin is properly formed\r\n\t\tif (!isFunction(plugin)) {\r\n\t\t\tthrow new Error('Plugins must be function values that return objects')\r\n\t\t}\r\n\r\n\t\tvar pluginProperties = plugin.call(this)\r\n\t\tif (!isObject(pluginProperties)) {\r\n\t\t\tthrow new Error('Plugins must return an object of function properties')\r\n\t\t}\r\n\r\n\t\t// Add the plugin function properties to this store instance.\r\n\t\teach(pluginProperties, function(pluginFnProp, propName) {\r\n\t\t\tif (!isFunction(pluginFnProp)) {\r\n\t\t\t\tthrow new Error('Bad plugin property: '+propName+' from plugin '+plugin.name+'. Plugins should only return functions.')\r\n\t\t\t}\r\n\t\t\tself._assignPluginFnProp(pluginFnProp, propName)\r\n\t\t})\r\n\t},\r\n\r\n\t// get returns the value of the given key. If that value\r\n\t// is undefined, it returns optionalDefaultValue instead.\r\n\tget: function(key, optionalDefaultValue) {\r\n\t\tvar data = this._storage().read(this._namespacePrefix + key)\r\n\t\treturn this._deserialize(data, optionalDefaultValue)\r\n\t},\r\n\r\n\t// set will store the given value at key and returns value.\r\n\t// Calling set with value === undefined is equivalent to calling remove.\r\n\tset: function(key, value) {\r\n\t\tif (value === undefined) {\r\n\t\t\treturn this.remove(key)\r\n\t\t}\r\n\t\tthis._storage().write(this._namespacePrefix + key, this._serialize(value))\r\n\t\treturn value\r\n\t},\r\n\r\n\t// remove deletes the key and value stored at the given key.\r\n\tremove: function(key) {\r\n\t\tthis._storage().remove(this._namespacePrefix + key)\r\n\t},\r\n\r\n\t// each will call the given callback once for each key-value pair\r\n\t// in this store.\r\n\teach: function(callback) {\r\n\t\tvar self = this\r\n\t\tthis._storage().each(function(val, namespacedKey) {\r\n\t\t\tcallback(self._deserialize(val), namespacedKey.replace(self._namespaceRegexp, ''))\r\n\t\t})\r\n\t},\r\n\r\n\t// clearAll will remove all the stored key-value pairs in this store.\r\n\tclearAll: function() {\r\n\t\tthis._storage().clearAll()\r\n\t},\r\n\r\n\t// additional functionality that can't live in plugins\r\n\t// ---------------------------------------------------\r\n\r\n\t// hasNamespace returns true if this store instance has the given namespace.\r\n\thasNamespace: function(namespace) {\r\n\t\treturn (this._namespacePrefix == '__storejs_'+namespace+'_')\r\n\t},\r\n\r\n\t// namespace clones the current store and assigns it the given namespace\r\n\tnamespace: function(namespace) {\r\n\t\tif (!this._legalNamespace.test(namespace)) {\r\n\t\t\tthrow new Error('store.js namespaces can only have alhpanumerics + underscores and dashes')\r\n\t\t}\r\n\t\t// create a prefix that is very unlikely to collide with un-namespaced keys\r\n\t\tvar namespacePrefix = '__storejs_'+namespace+'_'\r\n\t\treturn create(this, {\r\n\t\t\t_namespacePrefix: namespacePrefix,\r\n\t\t\t_namespaceRegexp: namespacePrefix ? new RegExp('^'+namespacePrefix) : null\r\n\t\t})\r\n\t},\r\n\r\n\t// createStore creates a store.js instance with the first\r\n\t// functioning storage in the list of storage candidates,\r\n\t// and applies the the given mixins to the instance.\r\n\tcreateStore: function(storages, plugins) {\r\n\t\treturn createStore(storages, plugins)\r\n\t},\r\n}\r\n\r\nfunction createStore(storages, plugins) {\r\n\tvar _privateStoreProps = {\r\n\t\t_seenPlugins: [],\r\n\t\t_namespacePrefix: '',\r\n\t\t_namespaceRegexp: null,\r\n\t\t_legalNamespace: /^[a-zA-Z0-9_\\-]+$/, // alpha-numeric + underscore and dash\r\n\r\n\t\t_storage: function() {\r\n\t\t\tif (!this.enabled) {\r\n\t\t\t\tthrow new Error(\"store.js: No supported storage has been added! \"+\r\n\t\t\t\t\t\"Add one (e.g store.addStorage(require('store/storages/cookieStorage')) \"+\r\n\t\t\t\t\t\"or use a build with more built-in storages (e.g \"+\r\n\t\t\t\t\t\"https://github.com/marcuswestin/store.js/tree/master/dist/store.legacy.min.js)\")\r\n\t\t\t}\r\n\t\t\treturn this._storage.resolved\r\n\t\t},\r\n\r\n\t\t_testStorage: function(storage) {\r\n\t\t\ttry {\r\n\t\t\t\tvar testStr = '__storejs__test__'\r\n\t\t\t\tstorage.write(testStr, testStr)\r\n\t\t\t\tvar ok = (storage.read(testStr) === testStr)\r\n\t\t\t\tstorage.remove(testStr)\r\n\t\t\t\treturn ok\r\n\t\t\t} catch(e) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_assignPluginFnProp: function(pluginFnProp, propName) {\r\n\t\t\tvar oldFn = this[propName]\r\n\t\t\tthis[propName] = function pluginFn() {\r\n\t\t\t\tvar args = slice(arguments, 0)\r\n\t\t\t\tvar self = this\r\n\r\n\t\t\t\t// super_fn calls the old function which was overwritten by\r\n\t\t\t\t// this mixin.\r\n\t\t\t\tfunction super_fn() {\r\n\t\t\t\t\tif (!oldFn) { return }\r\n\t\t\t\t\teach(arguments, function(arg, i) {\r\n\t\t\t\t\t\targs[i] = arg\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn oldFn.apply(self, args)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Give mixing function access to super_fn by prefixing all mixin function\r\n\t\t\t\t// arguments with super_fn.\r\n\t\t\t\tvar newFnArgs = [super_fn].concat(args)\r\n\r\n\t\t\t\treturn pluginFnProp.apply(self, newFnArgs)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_serialize: function(obj) {\r\n\t\t\treturn JSON.stringify(obj)\r\n\t\t},\r\n\r\n\t\t_deserialize: function(strVal, defaultVal) {\r\n\t\t\tif (!strVal) { return defaultVal }\r\n\t\t\t// It is possible that a raw string value has been previously stored\r\n\t\t\t// in a storage without using store.js, meaning it will be a raw\r\n\t\t\t// string value instead of a JSON serialized string. By defaulting\r\n\t\t\t// to the raw string value in case of a JSON parse error, we allow\r\n\t\t\t// for past stored values to be forwards-compatible with store.js\r\n\t\t\tvar val = ''\r\n\t\t\ttry { val = JSON.parse(strVal) }\r\n\t\t\tcatch(e) { val = strVal }\r\n\r\n\t\t\treturn (val !== undefined ? val : defaultVal)\r\n\t\t},\r\n\t}\r\n\r\n\tvar store = create(_privateStoreProps, storeAPI)\r\n\teach(storages, function(storage) {\r\n\t\tstore.addStorage(storage)\r\n\t})\r\n\teach(plugins, function(plugin) {\r\n\t\tstore.addPlugin(plugin)\r\n\t})\r\n\treturn store\r\n}\r\n","var assign = make_assign()\r\nvar create = make_create()\r\nvar trim = make_trim()\r\nvar Global = (typeof window !== 'undefined' ? window : global)\r\n\r\nmodule.exports = {\r\n\tassign: assign,\r\n\tcreate: create,\r\n\ttrim: trim,\r\n\tbind: bind,\r\n\tslice: slice,\r\n\teach: each,\r\n\tmap: map,\r\n\tpluck: pluck,\r\n\tisList: isList,\r\n\tisFunction: isFunction,\r\n\tisObject: isObject,\r\n\tGlobal: Global,\r\n}\r\n\r\nfunction make_assign() {\r\n\tif (Object.assign) {\r\n\t\treturn Object.assign\r\n\t} else {\r\n\t\treturn function shimAssign(obj, props1, props2, etc) {\r\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\r\n\t\t\t\teach(Object(arguments[i]), function(val, key) {\r\n\t\t\t\t\tobj[key] = val\r\n\t\t\t\t})\r\n\t\t\t}\t\t\t\r\n\t\t\treturn obj\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction make_create() {\r\n\tif (Object.create) {\r\n\t\treturn function create(obj, assignProps1, assignProps2, etc) {\r\n\t\t\tvar assignArgsList = slice(arguments, 1)\r\n\t\t\treturn assign.apply(this, [Object.create(obj)].concat(assignArgsList))\r\n\t\t}\r\n\t} else {\r\n\t\tfunction F() {} // eslint-disable-line no-inner-declarations\r\n\t\treturn function create(obj, assignProps1, assignProps2, etc) {\r\n\t\t\tvar assignArgsList = slice(arguments, 1)\r\n\t\t\tF.prototype = obj\r\n\t\t\treturn assign.apply(this, [new F()].concat(assignArgsList))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction make_trim() {\r\n\tif (String.prototype.trim) {\r\n\t\treturn function trim(str) {\r\n\t\t\treturn String.prototype.trim.call(str)\r\n\t\t}\r\n\t} else {\r\n\t\treturn function trim(str) {\r\n\t\t\treturn str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction bind(obj, fn) {\r\n\treturn function() {\r\n\t\treturn fn.apply(obj, Array.prototype.slice.call(arguments, 0))\r\n\t}\r\n}\r\n\r\nfunction slice(arr, index) {\r\n\treturn Array.prototype.slice.call(arr, index || 0)\r\n}\r\n\r\nfunction each(obj, fn) {\r\n\tpluck(obj, function(key, val) {\r\n\t\tfn(key, val)\r\n\t\treturn false\r\n\t})\r\n}\r\n\r\nfunction map(obj, fn) {\r\n\tvar res = (isList(obj) ? [] : {})\r\n\tpluck(obj, function(v, k) {\r\n\t\tres[k] = fn(v, k)\r\n\t\treturn false\r\n\t})\r\n\treturn res\r\n}\r\n\r\nfunction pluck(obj, fn) {\r\n\tif (isList(obj)) {\r\n\t\tfor (var i=0; i<obj.length; i++) {\r\n\t\t\tif (fn(obj[i], i)) {\r\n\t\t\t\treturn obj[i]\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tfor (var key in obj) {\r\n\t\t\tif (obj.hasOwnProperty(key)) {\r\n\t\t\t\tif (fn(obj[key], key)) {\r\n\t\t\t\t\treturn obj[key]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isList(val) {\r\n\treturn (val != null && typeof val != 'function' && typeof val.length == 'number')\r\n}\r\n\r\nfunction isFunction(val) {\r\n\treturn val && {}.toString.call(val) === '[object Function]'\r\n}\r\n\r\nfunction isObject(val) {\r\n\treturn val && {}.toString.call(val) === '[object Object]'\r\n}\r\n","module.exports = {\r\n\t// Listed in order of usage preference\r\n\t'localStorage': require('./localStorage'),\r\n\t'oldFF-globalStorage': require('./oldFF-globalStorage'),\r\n\t'oldIE-userDataStorage': require('./oldIE-userDataStorage'),\r\n\t'cookieStorage': require('./cookieStorage'),\r\n\t'sessionStorage': require('./sessionStorage'),\r\n\t'memoryStorage': require('./memoryStorage'),\r\n}\r\n","// cookieStorage is useful Safari private browser mode, where localStorage\r\n// doesn't work but cookies do. This implementation is adopted from\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\r\n\r\nvar util = require('../src/util')\r\nvar Global = util.Global\r\nvar trim = util.trim\r\n\r\nmodule.exports = {\r\n\tname: 'cookieStorage',\r\n\tread: read,\r\n\twrite: write,\r\n\teach: each,\r\n\tremove: remove,\r\n\tclearAll: clearAll,\r\n}\r\n\r\nvar doc = Global.document\r\n\r\nfunction read(key) {\r\n\tif (!key || !_has(key)) { return null }\r\n\tvar regexpStr = \"(?:^|.*;\\\\s*)\" +\r\n\t\tescape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") +\r\n\t\t\"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"\r\n\treturn unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\"))\r\n}\r\n\r\nfunction each(callback) {\r\n\tvar cookies = doc.cookie.split(/; ?/g)\r\n\tfor (var i = cookies.length - 1; i >= 0; i--) {\r\n\t\tif (!trim(cookies[i])) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tvar kvp = cookies[i].split('=')\r\n\t\tvar key = unescape(kvp[0])\r\n\t\tvar val = unescape(kvp[1])\r\n\t\tcallback(val, key)\r\n\t}\r\n}\r\n\r\nfunction write(key, data) {\r\n\tif(!key) { return }\r\n\tdoc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/\"\r\n}\r\n\r\nfunction remove(key) {\r\n\tif (!key || !_has(key)) {\r\n\t\treturn\r\n\t}\r\n\tdoc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\"\r\n}\r\n\r\nfunction clearAll() {\r\n\teach(function(_, key) {\r\n\t\tremove(key)\r\n\t})\r\n}\r\n\r\nfunction _has(key) {\r\n\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(doc.cookie)\r\n}\r\n","var util = require('../src/util')\r\nvar Global = util.Global\r\n\r\nmodule.exports = {\r\n\tname: 'localStorage',\r\n\tread: read,\r\n\twrite: write,\r\n\teach: each,\r\n\tremove: remove,\r\n\tclearAll: clearAll,\r\n}\r\n\r\nfunction localStorage() {\r\n\treturn Global.localStorage\r\n}\r\n\r\nfunction read(key) {\r\n\treturn localStorage().getItem(key)\r\n}\r\n\r\nfunction write(key, data) {\r\n\treturn localStorage().setItem(key, data)\r\n}\r\n\r\nfunction each(fn) {\r\n\tfor (var i = localStorage().length - 1; i >= 0; i--) {\r\n\t\tvar key = localStorage().key(i)\r\n\t\tfn(read(key), key)\r\n\t}\r\n}\r\n\r\nfunction remove(key) {\r\n\treturn localStorage().removeItem(key)\r\n}\r\n\r\nfunction clearAll() {\r\n\treturn localStorage().clear()\r\n}\r\n","// memoryStorage is a useful last fallback to ensure that the store\r\n// is functions (meaning store.get(), store.set(), etc will all function).\r\n// However, stored values will not persist when the browser navigates to\r\n// a new page or reloads the current page.\r\n\r\nmodule.exports = {\r\n\tname: 'memoryStorage',\r\n\tread: read,\r\n\twrite: write,\r\n\teach: each,\r\n\tremove: remove,\r\n\tclearAll: clearAll,\r\n}\r\n\r\nvar memoryStorage = {}\r\n\r\nfunction read(key) {\r\n\treturn memoryStorage[key]\r\n}\r\n\r\nfunction write(key, data) {\r\n\tmemoryStorage[key] = data\r\n}\r\n\r\nfunction each(callback) {\r\n\tfor (var key in memoryStorage) {\r\n\t\tif (memoryStorage.hasOwnProperty(key)) {\r\n\t\t\tcallback(memoryStorage[key], key)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction remove(key) {\r\n\tdelete memoryStorage[key]\r\n}\r\n\r\nfunction clearAll(key) {\r\n\tmemoryStorage = {}\r\n}\r\n","// oldFF-globalStorage provides storage for Firefox\r\n// versions 6 and 7, where no localStorage, etc\r\n// is available.\r\n\r\nvar util = require('../src/util')\r\nvar Global = util.Global\r\n\r\nmodule.exports = {\r\n\tname: 'oldFF-globalStorage',\r\n\tread: read,\r\n\twrite: write,\r\n\teach: each,\r\n\tremove: remove,\r\n\tclearAll: clearAll,\r\n}\r\n\r\nvar globalStorage = Global.globalStorage\r\n\r\nfunction read(key) {\r\n\treturn globalStorage[key]\r\n}\r\n\r\nfunction write(key, data) {\r\n\tglobalStorage[key] = data\r\n}\r\n\r\nfunction each(fn) {\r\n\tfor (var i = globalStorage.length - 1; i >= 0; i--) {\r\n\t\tvar key = globalStorage.key(i)\r\n\t\tfn(globalStorage[key], key)\r\n\t}\r\n}\r\n\r\nfunction remove(key) {\r\n\treturn globalStorage.removeItem(key)\r\n}\r\n\r\nfunction clearAll() {\r\n\teach(function(key, _) {\r\n\t\tdelete globalStorage[key]\r\n\t})\r\n}\r\n","// oldIE-userDataStorage provides storage for Internet Explorer\r\n// versions 6 and 7, where no localStorage, sessionStorage, etc\r\n// is available.\r\n\r\nvar util = require('../src/util')\r\nvar Global = util.Global\r\n\r\nmodule.exports = {\r\n\tname: 'oldIE-userDataStorage',\r\n\twrite: write,\r\n\tread: read,\r\n\teach: each,\r\n\tremove: remove,\r\n\tclearAll: clearAll,\r\n}\r\n\r\nvar storageName = 'storejs'\r\nvar doc = Global.document\r\nvar _withStorageEl = _makeIEStorageElFunction()\r\nvar disable = (Global.navigator ? Global.navigator.userAgent : '').match(/ (MSIE 8|MSIE 9|MSIE 10)\\./) // MSIE 9.x, MSIE 10.x\r\n\r\nfunction write(unfixedKey, data) {\r\n\tif (disable) { return }\r\n\tvar fixedKey = fixKey(unfixedKey)\r\n\t_withStorageEl(function(storageEl) {\r\n\t\tstorageEl.setAttribute(fixedKey, data)\r\n\t\tstorageEl.save(storageName)\r\n\t})\r\n}\r\n\r\nfunction read(unfixedKey) {\r\n\tif (disable) { return }\r\n\tvar fixedKey = fixKey(unfixedKey)\r\n\tvar res = null\r\n\t_withStorageEl(function(storageEl) {\r\n\t\tres = storageEl.getAttribute(fixedKey)\r\n\t})\r\n\treturn res\r\n}\r\n\r\nfunction each(callback) {\r\n\t_withStorageEl(function(storageEl) {\r\n\t\tvar attributes = storageEl.XMLDocument.documentElement.attributes\r\n\t\tfor (var i=attributes.length-1; i>=0; i--) {\r\n\t\t\tvar attr = attributes[i]\r\n\t\t\tcallback(storageEl.getAttribute(attr.name), attr.name)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction remove(unfixedKey) {\r\n\tvar fixedKey = fixKey(unfixedKey)\r\n\t_withStorageEl(function(storageEl) {\r\n\t\tstorageEl.removeAttribute(fixedKey)\r\n\t\tstorageEl.save(storageName)\r\n\t})\r\n}\r\n\r\nfunction clearAll() {\r\n\t_withStorageEl(function(storageEl) {\r\n\t\tvar attributes = storageEl.XMLDocument.documentElement.attributes\r\n\t\tstorageEl.load(storageName)\r\n\t\tfor (var i=attributes.length-1; i>=0; i--) {\r\n\t\t\tstorageEl.removeAttribute(attributes[i].name)\r\n\t\t}\r\n\t\tstorageEl.save(storageName)\r\n\t})\r\n}\r\n\r\n// Helpers\r\n//////////\r\n\r\n// In IE7, keys cannot start with a digit or contain certain chars.\r\n// See https://github.com/marcuswestin/store.js/issues/40\r\n// See https://github.com/marcuswestin/store.js/issues/83\r\nvar forbiddenCharsRegex = new RegExp(\"[!\\\"#$%&'()*+,/\\\\\\\\:;<=>?@[\\\\]^`{|}~]\", \"g\")\r\nfunction fixKey(key) {\r\n\treturn key.replace(/^\\d/, '___$&').replace(forbiddenCharsRegex, '___')\r\n}\r\n\r\nfunction _makeIEStorageElFunction() {\r\n\tif (!doc || !doc.documentElement || !doc.documentElement.addBehavior) {\r\n\t\treturn null\r\n\t}\r\n\tvar scriptTag = 'script',\r\n\t\tstorageOwner,\r\n\t\tstorageContainer,\r\n\t\tstorageEl\r\n\r\n\t// Since #userData storage applies only to specific paths, we need to\r\n\t// somehow link our data to a specific path.  We choose /favicon.ico\r\n\t// as a pretty safe option, since all browsers already make a request to\r\n\t// this URL anyway and being a 404 will not hurt us here.  We wrap an\r\n\t// iframe pointing to the favicon in an ActiveXObject(htmlfile) object\r\n\t// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)\r\n\t// since the iframe access rules appear to allow direct access and\r\n\t// manipulation of the document element, even for a 404 page.  This\r\n\t// document can be used instead of the current document (which would\r\n\t// have been limited to the current path) to perform #userData storage.\r\n\ttry {\r\n\t\t/* global ActiveXObject */\r\n\t\tstorageContainer = new ActiveXObject('htmlfile')\r\n\t\tstorageContainer.open()\r\n\t\tstorageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src=\"/favicon.ico\"></iframe>')\r\n\t\tstorageContainer.close()\r\n\t\tstorageOwner = storageContainer.w.frames[0].document\r\n\t\tstorageEl = storageOwner.createElement('div')\r\n\t} catch(e) {\r\n\t\t// somehow ActiveXObject instantiation failed (perhaps some special\r\n\t\t// security settings or otherwse), fall back to per-path storage\r\n\t\tstorageEl = doc.createElement('div')\r\n\t\tstorageOwner = doc.body\r\n\t}\r\n\r\n\treturn function(storeFunction) {\r\n\t\tvar args = [].slice.call(arguments, 0)\r\n\t\targs.unshift(storageEl)\r\n\t\t// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx\r\n\t\t// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx\r\n\t\tstorageOwner.appendChild(storageEl)\r\n\t\tstorageEl.addBehavior('#default#userData')\r\n\t\tstorageEl.load(storageName)\r\n\t\tstoreFunction.apply(this, args)\r\n\t\tstorageOwner.removeChild(storageEl)\r\n\t\treturn\r\n\t}\r\n}\r\n","var util = require('../src/util')\r\nvar Global = util.Global\r\n\r\nmodule.exports = {\r\n\tname: 'sessionStorage',\r\n\tread: read,\r\n\twrite: write,\r\n\teach: each,\r\n\tremove: remove,\r\n\tclearAll: clearAll,\r\n}\r\n\r\nfunction sessionStorage() {\r\n\treturn Global.sessionStorage\r\n}\r\n\r\nfunction read(key) {\r\n\treturn sessionStorage().getItem(key)\r\n}\r\n\r\nfunction write(key, data) {\r\n\treturn sessionStorage().setItem(key, data)\r\n}\r\n\r\nfunction each(fn) {\r\n\tfor (var i = sessionStorage().length - 1; i >= 0; i--) {\r\n\t\tvar key = sessionStorage().key(i)\r\n\t\tfn(read(key), key)\r\n\t}\r\n}\r\n\r\nfunction remove(key) {\r\n\treturn sessionStorage().removeItem(key)\r\n}\r\n\r\nfunction clearAll() {\r\n\treturn sessionStorage().clear()\r\n}\r\n","import { Layout, Page, EmptyState } from \"@shopify/polaris\";\r\nimport { ResourcePicker, TitleBar } from \"@shopify/app-bridge-react\";\r\nimport store from \"store-js\";\r\n\r\nconst img = \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\";\r\n\r\nclass Index extends React.Component {\r\n  state = { open: false };\r\n  render() {\r\n    return (\r\n      <Page>\r\n        <TitleBar\r\n          primaryAction={{\r\n            content: \"Select products\",\r\n            onAction: () => this.setState({ open: true })\r\n          }}\r\n        />\r\n        <ResourcePicker\r\n          resourceType=\"Product\"\r\n          showVariants={false}\r\n          open={this.state.open}\r\n          onSelection={resources => this.handleSelection(resources)}\r\n          onCancel={() => this.setState({ open: false })}\r\n        />\r\n        <Layout>\r\n          <EmptyState\r\n            heading=\"Discount your products temporarily\"\r\n            action={{\r\n              content: \"Select products\",\r\n              onAction: () => this.setState({ open: true })\r\n            }}\r\n            image={img}\r\n          >\r\n            <p>Select products to change their price temporarily.</p>\r\n          </EmptyState>\r\n        </Layout>\r\n      </Page>\r\n    );\r\n  }\r\n  handleSelection = resources => {\r\n    // for now, just console log.\r\n    // in future, interact with db using these ids\r\n    const idsFromResources = resources.selection.map(product => product.id);\r\n    this.setState({ open: false });\r\n    console.log(idsFromResources);\r\n  };\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzfrrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzrCA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AA+BA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAtCA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AANA;AAaA;;;;AAhCA;AACA;AAyCA;;;;A","sourceRoot":""}